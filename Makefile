# Build, package and clean Fatiando

# To upload to PyPI run:
# python setup.py sdist --formats=zip,gztar upload

.PHONY: package docs build test clean help

help:
	@echo "Commands:"
	@echo ""
	@echo "    build         build the extension modules inplace"
	@echo "    docs          build the pdf and html documentation"
	@echo "    test          run the test suite (including doctests)"
	@echo "    package       create source distributions"
	@echo "    package-win   create a windows installer"
	@echo "    clean         clean up"
	@echo ""

build:
	@python setup.py build_ext --inplace

docs: clean
	@cd doc; make html; make latexpdf

test:
	@nosetests fatiando

package: docs
	@python setup.py sdist --formats=zip,gztar

package-win: docs
	@python setup.py bdist_wininst

clean:
	@find . -name "*.so" -exec rm -v {} \;
	@find "fatiando" -name "*.c" -exec rm -v {} \;
	@find . -name "*.pyc" -exec rm -v {} \;
	@rm -rvf build dist MANIFEST
	@# Trash generated by the doctests
	@rm -rvf mydata.txt mylogfile.log
	@# The logo image fetched by the cookbook recipes
	@rm -rvf logo.png cookbook/logo.png

clean-all: clean
	@# Clean the docs as well
	@cd doc; make clean
