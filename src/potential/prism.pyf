! f2py wrapper for extention module fatiando.potential._prism
python module _prism
interface

  subroutine prism_gz(dens, x1, x2, y1, y2, z1, z2, xp, yp, zp, n, res)
    intent(c) prism_gz
    intent(c)
    double precision intent(in) :: dens, x1, x2, y1, y2, z1, z2
    double precision intent(in), dimension(n) :: xp, yp, zp
    double precision intent(out), dimension(n) :: res
    integer intent(hide), depend(xp) :: n=len(xp)
  end subroutine prism_gz

  function prism_gxx(dens, x1, x2, y1, y2, z1, z2, xp, yp, zp) result (res)
    intent(c) prism_gxx
    intent(c)
    double precision intent(in) :: dens, x1, x2, y1, y2, z1, z2, xp, yp, zp
    double precision intent(out) :: res
  end function prism_gxx

  function prism_gxy(dens, x1, x2, y1, y2, z1, z2, xp, yp, zp) result (res)
    intent(c) prism_gxy
    intent(c)
    double precision intent(in) :: dens, x1, x2, y1, y2, z1, z2, xp, yp, zp
    double precision intent(out) :: res
  end function prism_gxy

  function prism_gxz(dens, x1, x2, y1, y2, z1, z2, xp, yp, zp) result (res)
    intent(c) prism_gxz
    intent(c)
    double precision intent(in) :: dens, x1, x2, y1, y2, z1, z2, xp, yp, zp
    double precision intent(out) :: res
  end function prism_gxz

  function prism_gyy(dens, x1, x2, y1, y2, z1, z2, xp, yp, zp) result (res)
    intent(c) prism_gyy
    intent(c)
    double precision intent(in) :: dens, x1, x2, y1, y2, z1, z2, xp, yp, zp
    double precision intent(out) :: res
  end function prism_gyy

  function prism_gyz(dens, x1, x2, y1, y2, z1, z2, xp, yp, zp) result (res)
    intent(c) prism_gyz
    intent(c)
    double precision intent(in) :: dens, x1, x2, y1, y2, z1, z2, xp, yp, zp
    double precision intent(out) :: res
  end function prism_gyz

  function prism_gzz(dens, x1, x2, y1, y2, z1, z2, xp, yp, zp) result (res)
    intent(c) prism_gzz
    intent(c)
    double precision intent(in) :: dens, x1, x2, y1, y2, z1, z2, xp, yp, zp
    double precision intent(out) :: res
  end function prism_gzz

end interface
end python module _prism
